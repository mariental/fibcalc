name: GitHub Action flow to Docker Hub and GitHub Container Registry 

on:
  push:
    branches: 
      - "**"
    tags: 
      - "v*.*.*"
  pull_request:
    branches:
      - 'main'

jobs:
  build-and-push-images:
    name: Budowa i publikacja obrazow
    # deklaracja wybranego systemu operacyjnego
    runs-on: ubuntu-20.04

    steps:
      # akcja sprawdzająca, czy workflow ma poprawny dostęp do repozytorium
      - name: Checkout code
        uses: actions/checkout@v3

      # akcja delarujaca nazwy budowanych obrazow zgodnie z zasadami wersonowania semantycznego
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/FibCalc
            ghcr.io/${{ github.repository_owner }}/FibCalc
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      # konfiguracja buildx'a
      - name: Buildx set-up
        id: buildx
        uses: docker/setup-buildx-action@v2

      # "instalacja" emulatora dla wielu architektur
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # logowanie na konto Dockerhub
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2 
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # logowanie do rejestru kontenerow GitHub
      - name: Log in to the Container registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # zbudowanie obrazu za pomocą silnika buildkit i umieszczenie go na Docker Hub Registry oraz GitHub Container Registry
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          file: ./Dockerfile
          # zadeklarowanie dla jakich architektur będzie dostępny obraz 
          platforms: linux/amd64, linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # konfiguracja dla użycia cache w trybie registry, który umieszczony jest i pobierany z repozytorium na DockerHub
          cache-from: type=registry,ref=docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/lab:FibCalcCache
          cache-to: type=registry,ref=docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/lab:FibCalcCache
          